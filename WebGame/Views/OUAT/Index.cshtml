@model  WebGame.Models.Player
@{
    ViewBag.Title = "Index";
}

<h2>Welcome To Once Upon A Time , PlayerName : @Html.DisplayTextFor(model=>model.PlayerName)</h2>
<div class="form-group row" >
    <label class="control-label col-sm-2">在限總人數</label>
    <div class="col-sm-4">
        <p id="onlinePlayerNum"></p>
    </div>
</div>
<div class="form-group row">
    <div class="col-sm-4">
        <div id="divOUAT_Menu">
            <div class="form-group row">
                <button class="btn btn-default" id="btnOUAT_CreateRoom">創建</button>
            </div>
            <div class="form-group row" >
                <button class="btn btn-default">test</button>
            </div>
        </div>
    </div>
    <div class="col-sm-6">
        <div id="jsgrid_OUAT_Room"></div>
        <div id="jsgrid_OUAT_Room_Pager"></div>
    </div>
</div>

@section scripts{
    <script>
        $(document).ready(function () {
            $('#btnOUAT_CreateRoom').on("click", function () {
                player.server.createRoom("test").done(function (response) {
                    if (response.Data.result) {
                        var data = eval(response.Data.data);
                        if (data.length>0) {
                            $.each(data, function (value, index) {
                                this.TotalLimit = this.PlayerList + "/" + this.TotalLimit;
                            });
                        }
                    } else {
                        alert("已有相同房間請重新命名");
                    };
                });
            });
        });
        var player = $.connection.oUATHub;
        //防止重複ConnectionId
        player.client.duplicateConnectionId = async function () {
            alert("重複Id,請再試一次");
            window.location = '@Url.Action("Index","Home")';
        }
        player.client.getOnlinePlayerNumber = async function (num)
        {
            $('#onlinePlayerNum').text(num);
        }
        $.connection.hub.start().done(function () {
            player.server.connectToHub(@Model.PlayerName);
        });


        $("#jsgrid_OUAT_Room").jsGrid({
            width: "100%",
            autoload: false,
            paging: true,
            pageSize: 10,
            pageLoading: true,
            pagerContainer: "#jsgrid_OUAT_Room_Pager",
            data: [],
            rowClick: function (item) {
            },
            fields: [
                { name: "Name", title: '房間名稱', type: "text", width: 60, align: "center" },
                { name: "TotalLimit", title: '房間人數', type: "text", width: 60, align: "right" },
                //{
                //    name: "ExaminationId", title: '操作',
                //    itemTemplate: function (value, item) {
                //        var $result = $([]);
                //        return jsGridTemplate.customButton(value, item, ReviewData, '申請').attr('value', value);
                //    },
                //    width: 50, align: "center"
                //},
            ],
            controller: {
                loadData: function (filter) {
                    var d = $.Deferred();
                    var rtn = $.ajax({
                        url: '@Url.Action("QueryForAdjustment", "Quotation")',
                        data: {
                            Pager: {
                                CurrentPageNumber: filter.pageIndex - 1,
                                PageSize: filter.pageSize,
                            },
                            ProjectName: $('#txtProjectName').val(),
                            ExamineeName: $('#txtExamineeName').val(),
                            IdNo: $('#txtIdentityCard').val(),
                            OtherIdType:$('#ddlOtherIdType').val(),
                            OtherIdNo :$('#txtOtherIdNo').val(),
                        }
                    }).done(function (response) {
              
                        var data = eval(response.data);
                        for (i = 0; i < data.length; i++) {
                            data[i].SumPublicUnitePrice = data[i].SumPublicUnitePrice.toCurrency();
                            data[i].SumPublicCurrencyPrice = data[i].SumPublicCurrencyPrice.toCurrency();
                            data[i].SumSelfUnitePrice = data[i].SumSelfUnitePrice.toCurrency();
                            data[i].SumSelfCurrencyPrice = data[i].SumSelfCurrencyPrice.toCurrency();
                        }
                        d.resolve({
                            data: data,
                            itemsCount: response.itemsCount,
                        });
                        });
                    return d.promise();
                }
            }
        });
    </script>
    }



